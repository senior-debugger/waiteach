{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["declare global {\n  interface Array<T> {\n    waitEach(\n      callback: (item: T, index: number, array: T[]) => Promise<void> | void\n    ): Promise<void>;\n  }\n}\n\n/**\n * Asynchronous loop over an array with support for `await`.\n * Allows performing asynchronous operations on each element of an array sequentially.\n *\n * @template T - Type of array elements\n * @param {T[]} array - The array of elements to iterate over\n * @param {(item: T, index: number, array: T[]) => Promise<void> | void} callback -\n *        An asynchronous or synchronous function to execute on each element.\n *        Receives three arguments:\n *          - `item` — the current element\n *          - `index` — the index of the current element\n *          - `array` — the original array\n * @returns {Promise<void>} A promise that resolves when all iterations are complete\n *\n * @example\n * const numbers = [1, 2, 3];\n * await waitEach(numbers, async (num) => {\n *   await new Promise(resolve => setTimeout(resolve, 500));\n *   console.log(num);\n * });\n *\n * console.log('Done!');\n */\nexport async function waitEach<T>(\n  array: T[],\n  callback: (item: T, index: number, array: T[]) => Promise<void> | void\n): Promise<void> {\n  for (let i = 0; i < array.length; i++) {\n    await callback(array[i], i, array);\n  }\n}\n\n/**\n * Installs the `waitEach` method on the `Array` prototype.\n * After calling this function, all arrays will have the `waitEach` method available:\n *\n * @example\n * import { install } from 'waitEach';\n *\n * // Install the method globally\n * install();\n *\n * const numbers = [1, 2, 3];\n * await numbers.waitEach(async (num) => {\n *   await new Promise(resolve => setTimeout(resolve, 500));\n *   console.log(num);\n * });\n *\n * console.log('Done!');\n *\n * @returns {void} This function does not return anything.\n */\nexport const install = () => {\n  Array.prototype.waitEach = waitEach as any;\n};\n"],"names":["waitEach","array","callback","i","install"],"mappings":"gFA+BA,eAAsBA,EACpBC,EACAC,EACe,CACf,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAChC,MAAMD,EAASD,EAAME,CAAC,EAAGA,EAAGF,CAAK,CAErC,CAsBO,MAAMG,EAAU,IAAM,CAC3B,MAAM,UAAU,SAAWJ,CAC7B"}